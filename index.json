[{"authors":null,"categories":null,"content":"I am a Post-Doctoral associate in the School of Elctrical and Computer Engineering at Cornell University and a member of the Computer Systems Laboratory. My research concerns new algorithms, methodologies, and design automation tools for building correct and dependable computing systems via synergistic applications of specfication, architecture, and validation technologies. Specifically, my recent publications focus on post-silicon and pre-silicon validation of system-on-chips (SoCs), application of machine learning for high-level synthesis and hardware resiliency. My research has been recognized with IEEE CEDA Student Research Award (2016) and three best paper nominations (ICCAD'15, DAC'18, ASP-DAC'19).\nPrior to joining Cornell, I received my Ph.D. in Computer Engineering from the University of Illinois at Urbana-Champaign (UIUC). I have a B.Tech in Electronics Engineering from Jadavpur University and an M.S. in Computer Science from IIT Kharagpur.\nResearch Interests  Machine Learning for Electronic Design Automation (EDA) Reconfigurable Computing, Compiler Optimizations for High-Performance Computing System-on-Chip (SoC) Verification Edge Intelligence (EI) as Service, Trustworthy EI  Education  Ph.D. in Electrical and Computer Engineering (UIUC 2019)  Thesis: Scalable Functional Validation of Next Generation SoCs   M.S in Computer Science and Engineering (IIT Kharagpur, 2012)  Thesis: Automated Mixed-Signal Verification using Monitors and Simulation Relations   B.E in Electronics and Tele-Communication Engineering (Jadavpur University Kolkata, 2008)  Professional Services   Technical Program Committee (TPC) Member  Design Automation Conference (DAC) (2021, 2020) VLSI Design Conference (VLSID) (2021, 2020)    Reviewer  Journal: IEEE TVLSI (2019, 2018, 2017), IEEE TCAD (2020, 2016), IEEE TC (2019), ACM TODAES (2019) Conference: DAC (2019, 2018, 2017, 2016, 2015, 2014), DATE (2021, 2019, 2018, 2017), ICCAD (2018, 2017), FMCAD (2016), IWLS (2020), FPGA (2021), ASPLOS-LATTE Workshop (2021)    ","date":1613606400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1613606400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Post-Doctoral associate in the School of Elctrical and Computer Engineering at Cornell University and a member of the Computer Systems Laboratory. My research concerns new algorithms, methodologies, and design automation tools for building correct and dependable computing systems via synergistic applications of specfication, architecture, and validation technologies.","tags":null,"title":"Debjit Pal","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://paldebjit.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Application of Machine Learning ","date":1627776000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627776000,"objectID":"0b22739a93d5c902c35ea845ac4b7d59","permalink":"https://paldebjit.github.io/research/ml_and_dsl/","publishdate":"2021-08-01T00:00:00Z","relpermalink":"/research/ml_and_dsl/","section":"research","summary":" ","tags":null,"title":"Application of ML","type":"research"},{"authors":null,"categories":null,"content":"Write the details here ","date":1627776000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627776000,"objectID":"c49022694700d50d89d26abbcd4b93fe","permalink":"https://paldebjit.github.io/research/security/","publishdate":"2021-08-01T00:00:00Z","relpermalink":"/research/security/","section":"research","summary":" ","tags":null,"title":"Security Analysis","type":"research"},{"authors":null,"categories":null,"content":"System-on-Chip (SoC) Validation System-on-Chips (SoCs) constitutes the primary backbone of modern embedded computing devices including many safety-critical applications e.g., autonomous vehicles, health care systems. The presence of any undetected bugs in these systems would have aberrant cost both in terms of safety and reliability and can cause loss of property or life. Hence, SoC validation is a crucial task to ensure the functional correctness of an SoC. The sheer size, presence of hundreds of concurrently executing heterogeneous IPs, vertical integration of SoC components e.g., hardware/firmware/software to realize multiple functionality, and application-level relevance of components present a new spectrum of validation challenges that have rendered the traditional microprocessor validation paradigm moot in the context of SoC validation. The challenges include observability enhancement and debug and diagnosis under the constraint of vertical integrations, identifying high-quality verification artifacts among others. In industrial practice, SoC validation is a manual, unsystematic, and ad hoc process that heavily relies on the expertise and the creativity of the validator. Consequently, there is an urgent need to develop scalable and efficient algorithms of industrial relevance to address this massive ongoing challenge of SoC validation.\nIn my research, we made contributions to both post-silicon and pre-silicon validation of SoCs, with highly impactful contributions to next-generation post-silicon SoC validation. We use top-down analysis, a higher level of abstraction, and application relevance as the key ideas to automate post-silicon observability enhancement for industrial scale SoCs. We scaled observability to designs that are more than 300$\\times$ the size of designs that have been presented in the academic literature so far. Our observability enhancement solution can be applied at the netlist-level, behavioral level (ICCAD'15, TCAD'20a), and at the system-wide application level (DAC'18) to select high-quality signals that are most beneficial for post-silicon debug and diagnosis. We apply a feature engineering based machine learning technique on the observed signal data to develop an automatic, scalable, and efficient post-silicon debug and diagnosis solution. The key idea is to learn the correct and erroneous design behavior automatically from trace data without prior design knowledge. We believe our debugging solution can automate post-silicon debug and diagnosis, where manual debugging is the norm.\nThe quality of SoC verification and validation heavily depends on the quality of verification artifacts e.g., assertions. To automate and expedite identification of high-functional coverage assertions that are useful for regression analysis, localization, etc., we have also developed a comprehensive ranking scheme for assertions (TCAD'20b, ASP-DAC'19, VLSID'16). The key idea is to identify assertions that capture important design behaviors by analyzing the design source code.\nOur SoC validation solutions are scalable and efficient. We consistently show orders of magnitude speedup improvements over the state-of-the-art while objectively improving quality of results. We have shown that going forward application-level analysis is the key to scale post-silicon validation to industrial scale SoCs. Our proposed validation solutions can plug into the existing industrial validation process to introduce automation in the current unsystematic, ad hoc, manual settings with multiple order of magnitudes of benefit.\nHardware Reliability Estimation Due to the continuous technology scaling and lowering of operating voltages, modern computer systems are highly vulnerable to soft errors induced by the high-energy particles. Soft errors can corrupt program outputs leading to silent data corruption or a Crash. To protect computer systems against such failures, architects need to precisely and quickly identify vulnerable program instructions that need to be protected. Traditional techniques for program reliability estimation either use expensive and time-consuming fault injection or inaccurate analytical models to identify the program instructions that need to be protected against soft errors. In this research (DATE'21), we present a graph learning-assisted model for fast, accurate, and transferable soft-error induced instruction vulnerability estimation. We leverage a synergy between static analysis and data-driven statistical reasoning to automatically learn signatures of instruction-level vulnerabilities and their propagation to program outputs using a fine-grain error propagation information from the bit-level program graphs of a set of realistic benchmarks.\n","date":1627776000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627776000,"objectID":"8607ba6f8d991764c8af63f7141b35e8","permalink":"https://paldebjit.github.io/research/verif_and_rel/","publishdate":"2021-08-01T00:00:00Z","relpermalink":"/research/verif_and_rel/","section":"research","summary":" ","tags":null,"title":"Verification and Reliability","type":"research"},{"authors":["Debjit Pal","Shobha Vasudevan"],"categories":null,"content":"","date":1613606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613606400,"objectID":"23b0ffd6058a4f3b010fe45fa225d437","permalink":"https://paldebjit.github.io/publication/corr-abs-2021/","publishdate":"2021-02-18T00:00:00Z","relpermalink":"/publication/corr-abs-2021/","section":"publication","summary":"","tags":null,"title":"Feature Engineering for Scalable Application-Level Post-Silicon Debugging","type":"publication"},{"authors":["Jiajia Jiao","Debjit Pal","Chenhui Deng","Zhiru Zhang"],"categories":null,"content":"","date":1612483200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1612483200,"objectID":"71aad3489e71b14d6da009295cde5154","permalink":"https://paldebjit.github.io/publication/date-2021/","publishdate":"2021-02-05T00:00:00Z","relpermalink":"/publication/date-2021/","section":"publication","summary":"","tags":null,"title":"GLAIVE: Graph Learning Assisted Instruction Vulnerability Estimation","type":"publication"},{"authors":["Debjit Pal","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://paldebjit.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Ecenur Ustun","Chenhui Deng","Debjit Pal","Zhijing Li","Zhiru Zhang"],"categories":null,"content":"","date":1604275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604275200,"objectID":"e4995ac092f2779a6c446e8378159593","permalink":"https://paldebjit.github.io/publication/iccad-2020/","publishdate":"2020-11-02T00:00:00Z","relpermalink":"/publication/iccad-2020/","section":"publication","summary":"","tags":null,"title":"Accurate Operation Delay Prediction for FPGA HLS Using Graph Neural Networks","type":"publication"},{"authors":["Debjit Pal","Spencer Offerberger","Shobha Vasudevan"],"categories":null,"content":"","date":1600905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600905600,"objectID":"9973bae2c533197a5d896b969ae72585","permalink":"https://paldebjit.github.io/publication/tcad-2020-1/","publishdate":"2020-09-24T00:00:00Z","relpermalink":"/publication/tcad-2020-1/","section":"publication","summary":"","tags":null,"title":"Assertion Ranking Using RTL Source Code Analysis","type":"publication"},{"authors":["Debjit Pal","Sai Ma","Shobha Vasudevan"],"categories":null,"content":"","date":1600905600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600905600,"objectID":"d79034647e8ee33a3e0ab444af9ed841","permalink":"https://paldebjit.github.io/publication/tcad-2020-2/","publishdate":"2020-09-24T00:00:00Z","relpermalink":"/publication/tcad-2020-2/","section":"publication","summary":"","tags":null,"title":"Emphasizing Functional Relevance Over State Restoration in Post-Silicon Signal Tracing","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://paldebjit.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Samuel Hertz","Debjit Pal","Spencer Offernberger","Shobha Vasudevan"],"categories":null,"content":"","date":1548028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548028800,"objectID":"898f9d21651d2ddcde2f7cc3909c4170","permalink":"https://paldebjit.github.io/publication/aspdac-2019/","publishdate":"2019-01-21T00:00:00Z","relpermalink":"/publication/aspdac-2019/","section":"publication","summary":"","tags":null,"title":"A figure of merit for assertions in verification","type":"publication"},{"authors":["Debjit Pal","Abhishek Sharma","Sandip Ray","Flavio M. de Paula","Shobha Vasudevan"],"categories":null,"content":"","date":1529798400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1529798400,"objectID":"227042e30b1b3d70e12714174d712ca3","permalink":"https://paldebjit.github.io/publication/dac-2018/","publishdate":"2018-06-24T00:00:00Z","relpermalink":"/publication/dac-2018/","section":"publication","summary":"","tags":null,"title":"Application level hardware tracing for scaling post-silicon debug","type":"publication"},{"authors":["Debjit Pal","Shobha Vasudevan"],"categories":null,"content":"","date":1451865600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451865600,"objectID":"56b0391d2055215906dfac9a131f8b95","permalink":"https://paldebjit.github.io/publication/vlsi-2016/","publishdate":"2021-07-14T00:15:23-04:00","relpermalink":"/publication/vlsi-2016/","section":"publication","summary":"","tags":null,"title":"Symptomatic Bug Localization for Functional Debug of Hardware Designs","type":"publication"},{"authors":["Sai Ma","Debjit Pal","Rui Zhang","Sandip Ray","Shobha Vasudevan"],"categories":null,"content":"","date":1446422400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1446422400,"objectID":"d9b2e31a5d727b7e58c646507a72a872","permalink":"https://paldebjit.github.io/publication/iccad-2015/","publishdate":"2015-11-02T00:00:00Z","relpermalink":"/publication/iccad-2015/","section":"publication","summary":"","tags":null,"title":"Can't See the Forest for the Trees: State Restoration's Limitations","type":"publication"},{"authors":["Parth Sagdeo","Nicholas Ewalt","Debjit Pal","Shobha Vasudevan"],"categories":null,"content":"","date":1384128000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1384128000,"objectID":"8ad98f184dc8a79ecf62d1ad026a8c8e","permalink":"https://paldebjit.github.io/publication/ase-2013/","publishdate":"2013-11-11T00:00:00Z","relpermalink":"/publication/ase-2013/","section":"publication","summary":"","tags":null,"title":"Using automatically generated invariants for regression testing and bug localization","type":"publication"},{"authors":["Debjit Pal","Siddhartha Mukhopadhyay","Pallab Dasgupta"],"categories":null,"content":"","date":1325894400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325894400,"objectID":"523e21e743c3a7970c76358e468cf8fd","permalink":"https://paldebjit.github.io/publication/vlsi-2012/","publishdate":"2012-01-07T00:00:00Z","relpermalink":"/publication/vlsi-2012/","section":"publication","summary":"","tags":null,"title":"A Library for Passive Online Verification of Analog and Mixed-Signal Circuits","type":"publication"},{"authors":["Antara Ain","Debjit Pal","Pallab Dasgupta","Siddhartha Mukhopadhyay","Rajdeep Mukhopadhyay","John Gough"],"categories":null,"content":"","date":1320537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1320537600,"objectID":"8c6129f56dd6f063d3ce8814a23b3269","permalink":"https://paldebjit.github.io/publication/todaes-2011/","publishdate":"2021-07-14T00:15:48-04:00","relpermalink":"/publication/todaes-2011/","section":"publication","summary":"","tags":null,"title":"Chassis: A Platform for Verifying PMU Integration Using Autogenerated  Behavioral Models","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://paldebjit.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]